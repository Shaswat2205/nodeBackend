const {condition} = require("sequelize");
const db = require("../models");
const patient_examination = db.patient_examination;
const Op = db.Sequelize.Op;

exports.create=(req,res) => {
    const {
        id,
        patient_id,
        date,
        general_exam,
        pulse_rate,
        heart_rate,
        respiration_rate,
        blood_pressure,
        nadi,
        mutra,
        jivha_upalepita,
        jivha_ragayukta,
        jivha_others,
        jivha_centrally_coated,
        shabda,
        sparsha,
        varna_ruksha,
        varna_snigdha,
        varna_tanu,
        varna_sthula,
        varna_ushna,
        drik_pale,
        drik_conjested,
        drik_kalushita,
        drik_akshimalasrava,
        drik_jalasrava,
        drik_raga,
        akriti,
        prakruti_type,
        prakruti_assess,
        saara_type,
        saara_assess,
        smhanana_type,
        smhanana_assess,
        pramana_type,
        pramana_assess,
        satmya_type,
        satmya_asess,
        satwa_type,
        satwa_assess,
        ahara_shakti_type,
        ahara_shakti_assess,
        vyayama_shakti_type,
        vyayama_shakti_assess,
        vayah_type,
        vayah_assess,
        manah,
        buddhi,
        sanjna,
        jnana,
        bhakti,
        sheela,
        chesta,
        achara,
        smriti,
        cvc,
        rs,
        pa,
        cns,
        power,
        reflexes,
        tone,
        others,
        gus,
        mss,
        skin,
        storus1,
        storus2,
        storus3,
        dustilakshna1,
        dustilakshna2,
        dustilakshna3,
        local_exam,
        roga_type,
    } = req.body

    const data1 = {
        id,
        patient_id,
        date,
        general_exam,
        pulse_rate,
        heart_rate,
        respiration_rate,
        blood_pressure,
        nadi,
        mutra,
        jivha_upalepita,
        jivha_ragayukta,
        jivha_others,
        jivha_centrally_coated,
        shabda,
        sparsha,
        varna_ruksha,
        varna_snigdha,
        varna_tanu,
        varna_sthula,
        varna_ushna,
        drik_pale,
        drik_conjested,
        drik_kalushita,
        drik_akshimalasrava,
        drik_jalasrava,
        drik_raga,
        akriti,
        prakruti_type,
        prakruti_assess,
        saara_type,
        saara_assess,
        smhanana_type,
        smhanana_assess,
        pramana_type,
        pramana_assess,
        satmya_type,
        satmya_asess,
        satwa_type,
        satwa_assess,
        ahara_shakti_type,
        ahara_shakti_assess,
        vyayama_shakti_type,
        vyayama_shakti_assess,
        vayah_type,
        vayah_assess,
        manah,
        buddhi,
        sanjna,
        jnana,
        bhakti,
        sheela,
        chesta,
        achara,
        smriti,
        cvc,
        rs,
        pa,
        cns,
        power,
        reflexes,
        tone,
        others,
        gus,
        mss,
        skin,
        storus1,
        storus2,
        storus3,
        dustilakshna1,
        dustilakshna2,
        dustilakshna3,
        local_exam,
        roga_type,
    };

    return patient_examination.create(data1)
        .then(async data =>{
            data = data.get({plain:true});

            return res.status(201).json({
                code:200,
                message: "patient examination record added",
                data
            });
        })
        .catch(err => {
            console.error(`Error while creating patient examination record :: ${err}`);
            return res.status(500).json({message: 'Internal Server error in patient examination'});
        })
}